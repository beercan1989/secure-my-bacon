language: java

sudo: required

services:
  - docker

##
# Java version supported
##
jdk:
  - oraclejdk8

##
# Configuration for Neo4j integration tests
##
env:
  global:
    - NEO4J_USERNAME="neo4j"
    - NEO4J_PASSWORD="password"
    - NEO4J_DEFAULT_PASSWORD="neo4j"
  matrix:
    # Embedded, uses the internal version of the project
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.embedded.driver.EmbeddedDriver"

    # Bolt & HTTP with an external version of v3.0.2
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.bolt.driver.BoltDriver" NEO4J_URI="bolt://localhost:7687" NEO4J_VERSION="3.0.2"
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.http.driver.HttpDriver" NEO4J_URI="http://localhost:7474" NEO4J_VERSION="3.0.2"

    # Bolt & HTTP with an external version of v3.0.3
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.bolt.driver.BoltDriver" NEO4J_URI="bolt://localhost:7687" NEO4J_VERSION="3.0.3"
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.http.driver.HttpDriver" NEO4J_URI="http://localhost:7474" NEO4J_VERSION="3.0.3"

    # Bolt & HTTP with an external version of v3.0.4
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.bolt.driver.BoltDriver" NEO4J_URI="bolt://localhost:7687" NEO4J_VERSION="3.0.4"
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.http.driver.HttpDriver" NEO4J_URI="http://localhost:7474" NEO4J_VERSION="3.0.4"

    # Bolt & HTTP with an external version of v3.0.5
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.bolt.driver.BoltDriver" NEO4J_URI="bolt://localhost:7687" NEO4J_VERSION="3.0.5"
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.http.driver.HttpDriver" NEO4J_URI="http://localhost:7474" NEO4J_VERSION="3.0.5"

    # Bolt & HTTP with an external version of v3.0.6
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.bolt.driver.BoltDriver" NEO4J_URI="bolt://localhost:7687" NEO4J_VERSION="3.0.6"
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.http.driver.HttpDriver" NEO4J_URI="http://localhost:7474" NEO4J_VERSION="3.0.6"

    # Bolt & HTTP with an external version of v3.0.7
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.bolt.driver.BoltDriver" NEO4J_URI="bolt://localhost:7687" NEO4J_VERSION="3.0.7"
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.http.driver.HttpDriver" NEO4J_URI="http://localhost:7474" NEO4J_VERSION="3.0.7"

    # Bolt & HTTP with an external version of v3.0.8
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.bolt.driver.BoltDriver" NEO4J_URI="bolt://localhost:7687" NEO4J_VERSION="3.0.8"
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.http.driver.HttpDriver" NEO4J_URI="http://localhost:7474" NEO4J_VERSION="3.0.8"

    # Bolt & HTTP with an external version of v3.1.0
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.bolt.driver.BoltDriver" NEO4J_URI="bolt://localhost:7687" NEO4J_VERSION="3.1.0"
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.http.driver.HttpDriver" NEO4J_URI="http://localhost:7474" NEO4J_VERSION="3.1.0"

    # Bolt & HTTP with an external version of v3.1.1
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.bolt.driver.BoltDriver" NEO4J_URI="bolt://localhost:7687" NEO4J_VERSION="3.1.1"
    - NEO4J_DRIVER="org.neo4j.ogm.drivers.http.driver.HttpDriver" NEO4J_URI="http://localhost:7474" NEO4J_VERSION="3.1.1"

##
# Install and setup Neo4j
##
before_install: ci/setup-neo4j-docker.bash

##
# Enable integration tests during the testing phase
##
script: mvn --batch-mode verify

after_success:
  ##
  # Report code coverage to coveralls.io
  ##
  - mvn coveralls:report

deploy:
  - provider: script
    skip_cleanup: true
    script: ci/mvn-deploy.bash
    on:
      repo: beercan1989/secure-my-bacon
      branch: master

  - provider: releases
    skip_cleanup: true
    api_key:
      secure: "TjSM4fQKW36sNL9TMRWjZWrehw5v4sjHz6ExmUHfqxl2/VUNmbwtVNrVDuTg5wxa3ec1mOxzKwCGHrdfjJrl55uu4POQuToUYGv+aaAVvVNtPjxinrhXF2bSr+qEFTZfXeJeg9VIhBO2L7UH6pp0+WyxvLvCtG8HTRUjm1vDJXmHAuX2lR+JTpoNxICxXlUl/pJd8cy0F/Pw3qwnwY5XZDuLtuBsK3wwm279zYNEzUr1TgIfy5dfLgaEXKoNK3FLYF8faNvUoQhuY9KL6SNfyvEwFPO+M8jTYXeY6g4n6AD9m+07+tNH6T5XNCL8ZT+AADiHXrl55BiPl6LiCouGMtcXlfgbnW9pwYfaTOzrWI8xL/e5sNFX6x541ChGzu0mkByHi2FFQQUUooB349Pnsfng2G+Mi2zPDPalSpS7V4l09rQkjU8iwRve3yxz8Q0FkJ//rva5d+CfkGKh5rwv6M11EKN08iUWTSnICVrN3Z6R/rwU1HQS9Lx3SKjWm3JGgGotvmtnBdAGpgbqDU8qY5zYJVsIFAQNRMGIKsFC/pPNv/BGwj8JhVlE/RGjk2YoRfXc0VYFAFb+B6h0NGW4coqL4maWWhtdu1LiQJcCxQML2Q+5EG+1ZEB64Ie8AgDeQcNilWAdI3bSkOXHwh5/Cj/wZQTGKEupXoq1BZXeNuQ="
    file:
      - ./base/target/base.jar
      - ./api/target/api.jar
    on:
      repo: beercan1989/secure-my-bacon
      tags: true

env:
  global:
    ##
    # Secured global variables for GPG, OSSRH and Coveralls integration
    ##
    - secure: "p8zTjsBUPE4sM+r4fbmE+bf3vJ4Po7Ai2mYbM2oy0ZuQC0xkJABT4ll2unB9S1a55nfyOTB1tUAjeJcp2hlDyxHqdSUtDL/NadzMLwlnXZAdR1JG/ayYr4/X+lM55xP/TAnnlBZDGSUHEFD+oU9J1GJUsoIR/mRe40DV9j7sgffo8UU1LkE/ZjbWO8vt9cedYx2yQHwAYkBFBcJ9q2JcTy1f8/VKtTX0QC2FjhwbO5WOntaGytD6ggLYSV50IjovW3W/ms0jbIxTJT84e8pCTeUAXdke5ibfvatcAYfcFu7VdieAjWdGWlgZNUTRdOxUrikgrAZxMRUDvuWVHrz5dECkYpUc4BImc8vrals3WQelDEU3cE/KwtVdcoTbVYy3EPXYNwEgorRIH3HcJEskKph0so4P3vsGibF5PYouZsMiDSUymH5vxnxKrr6q0oKoHOO4/3Pe1Li50IT5+spFQaGKA22bseYxH+MkLRQ2E+F62dTFU2j32tdzdM/dUdbrUySjJndEgmv4wfeo5aYH/adEEcAM/+vTWnlD1djdkGxoa61oYTCWZqwMTET9DS7gqLu5ZeHQhqY3CgthGudcPoHBUe3N0Y+xShFDcLTmuKlQQ6uCI6i3p3yhEKvIXxbSZ8iUJtnBZZtIOvpK5zZaN1JUHt7iZxhSIO45eF0oob0="
    - secure: "nGQ+fFb4xB3Vta0LleQncKJGuUasmSgShlpcclMp8TUgiRZSFscqJU9hlRY2k7qem0PsnIA4mQvZLzFGQk0KzI+8sEykhX2z4ziA1o+W9J+Yp+r27QXSJV8sV7gOhBc+hbuGqAMzJEk31ge4onfQtIDZTzauMg5P9yBU/jM4n+4G3T+/lcLuqqQH1GM+VsfdJ/cpGOmDRSUIgJ8kqeGczWI+UQdPo1/M4k7t9Qk5cYRAacBzqmhikKf+e16yfa1a3UirKVfAWhY+hSNyW6IRa4py1++MH4c2lk1Pm9a/nDKTSoB5nT3LOSYBa7Lkeh0SFPi0KOSU90fi+U8Ilrmi/JR02VyJ8yVCbKCzZaEpRxE7M9w9Gj2Jz7+4xTKpSL15reGpmgxX09+CxixyoHLVcOBRFOB1tob0J4oz5MjYmhUdCKc/LJgGznC6Ah9xDiWWWjKAcrzE1VJ6BuAssU/wx+WoISS6MMWi2fdm7G4IN1IVjOzMe58ZVpnzru/nBmhhs5duKQM/HacL93frpqZi2guzk/Qte70OK82gMXdzgQncbGw0tpZG+rRp0wya4q+Cbj045qhOS9XWn1yIb9QPpopF+4ntOjzmHG7I66MpicaN8dRxJf0yh/qTV5hvx+gkwqhO8V8YPmIe1KUENkZZcc4mo0Sp/XxKFxgdXZ0JYFE="
    - secure: "zl8Cjlngb0l6EurU7/7zO2iraNRWhMWepeTmEWE+ItL+va7yi269snhDNO1uJzS45NEXXfutidf6Ti09InpWwee1/toKWnUSpPlPvtlXaoMNoxwENv1Of0KrXdwfyMhD0tQkodVj7lt1Kc6e3x1SwKWB+OQ5JUBKcgsKZQjEYUSb1KvrX8asuNvZzssKZcUtEAlnn5pMtJEAihmvopjtOnxoitzWI1K22mBIN1qdOx+h5odq4XZfJrXCzJxvMC6l5wtuVUR0lvqtE0pyUlHHAfQMWj8tbUBANllex23bLd3cXHha0h91ExreIGewdt9zuyPWaxOjjLtXijFIGjVxZoiP9MWXxjpIsu9dktKmsaTZrC1q9fqB+tpkA8vJxmqNzlKGUh0fFRCHUGDU6uXXYc8J3DG+I8Fu2rHJGIvPfeqUvMKoSTwMiWJbeGK+O8WTRvez2ZwIGNRXJMOkui2Yqxy3ojQ2F+BiMtLhe4tEAYbSxEWA6LqJbFkpfkQ2mYMNSGhQIri6DXZruYwvw6li/dzbEPbLt+0mK4RE1UA7yNqB0syD1mRqCc/PMJixo2PjIYlIqptV0+nSae7Z0gW0qxyTvt8Zv6Q7pbyZ1Htby83cn+lPM+g/NavM6CCtsd9qbJlVxv94SzAfnfjo8r/wYHqMWEIY7qkVMp1xgpEEx+w="
    - secure: "WDGuIfxNJLGSdAf6SZU+oOlh3ezkybsahBYoC7nL/M5yr1lqRl+CIOGtkmjkzvDNy8MBx9IyLf1Lq03gul3zpRDQ/32RNOu9TOUJanHFM26WbfRhEEaHAUTp1N0A0lo+BK1/RPYTrWdqjX0Gx0fiJO7iqROItanFNSWMfb7/bsCqTDt38ToDr9FgWCzeX4omVzhhFTOfRiUauX9xPhyoPRUX12kwMwfCXdgXjy8MhwGnc7DANLcbqdrDFsuvRl2FPH9Mxna7OHA7xxJnOBW619im9kGFJvWBveiUY8qTcNlpBgvVoAMkCytQhC6pcairmcjEwXTJqW2ctZumc/baJ5VVcEjp48j4QmADz7g8eJXFLDOHu4Pj58jAcRgOcUo8hi+rMpxYl/6TWw6VF0By18q4xo95KBvDg+RGEPzIF8KB3MxZuFQYuKsdfvGPTuzU+HDSVsEwS8toLA8/6zR8J7EW3mnJw1LxmcFKAPwnW93xe6Pf+4jTbbUbdJeW20m8Xm7QVSRmIKRQEzsr1+2YATPa2/I9zWgqQlv+hMQWfxlAsZM1IJ43PLtu/qnVZQ62GawvHhd/FksAoe6P2wG6GSinXg/M+hGiByT6VLrBdBjpsajeDYYgjwS2d3WUMR6iUbVoZ9eGK1Qux93eaRgObGSM2c8c5HZbliul/iYBx28="
    - secure: "O/KrPQSOjHaDqMrppWGAdnHgW6/YB9sHM5NukRbK9Yt6nyNfMCz+GuuJGJEBA5hoQn7pemdUQA+6tJOth/7mOX5xqWaFFlkm37fN/8QgzOwVqNHA/8Ke7KOQjVafVllMYG7uTSzSqCFP6t94vLsmmoH2viM/UKcor2qV0ZpLotBUs+gsYIMLJ41kq3fBCnh3rllWico0PDgtxsivCyU1t343QH6Vg69bTHh0b1AGU1oObWbW8WTSp7AxKEsROCBnnWZVG9pHVQPdPZnB8IJzMyyD34zo/sv2z1Ir+1uIRZsuVEahfFaO59uh2KWTvhduO3RMLOl+Anh9LcbeJ013YNg4RqoxZlhe6FIdt1izHfnrsPG+eliCIqh6WjHWa5/3sc7Ln+FGlq/fwgB9D9yVgNTOmmydZzwlhUKx5sjTB2QzNU3B51eB9xREkGF8q528kIpR+n/A9fm+zZBkpsvCy+RLjl0eH5i+DlI6uMx/SZQtNmqej3HkPC9VHtojHduFlpMQM4QZnVzfXxytpvZHPFj1ju0LSryyNFSRsy9w8ncVvcIRH+OjC5IIEfq4CQ64FY2nbZDmKuH/VruDMIbOHvTarek/Ygqh739FpIp1B0ghDs3myBn7VPW00bS4wMPC/9fPSaMjcXvWWEqsg5NA8eyv/4Aw8QeZTahMQwgyKY8="
